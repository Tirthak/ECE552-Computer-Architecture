sim-cache: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: loading EIO file: /cad2/ece552f/benchmarks/compress.eio
sim: command line: ./sim-cache -config cache-config/cache-lru-open.cfg -redir:sim compressdefault.txt /cad2/ece552f/benchmarks/compress.eio 

sim: simulation started @ Mon Nov 14 11:18:22 2016, options follow:

sim-cache: This simulator implements a functional cache simulator.  Cache
statistics are generated for a user-selected cache and TLB configuration,
which may include up to two levels of instruction and data cache (with any
levels unified), and one level of instruction and data TLBs.  No timing
information is generated.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     compressdefault.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst           100000000 # maximum number of inst's to execute
-cache:dl1       dl1:64:64:4:l:2 # l1 data cache config, i.e., {<config>|none}
-cache:dl2       ul2:512:64:8:l:0 # l2 data cache config, i.e., {<config>|none}
-cache:il1       il1:64:64:4:l:0 # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-tlb:itlb                none # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb                none # data TLB config, i.e., {<config>|none}
-flush                  false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>:<pref>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random, 'n'-NRU
    <pref>   - prefetcher type, 0 - no prefetcher, 1 - next line prefetcher,
	       2 - open-ended prefetcher, 
	       any other number num - stride prefetcher with num entries in the Reference Prediction Table (RPT)

    Examples:   -cache:dl1 dl1:4096:32:1:l:1
                -dtlb dtlb:128:4096:32:r:0

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l:0 -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l:0 -cache:dl2 ul2:1024:64:2:l:0

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l:0 -cache:dl2 ul2:1024:64:2:l:0



sim: ** starting functional simulation w/ caches **

sim: ** simulation statistics **
sim_num_insn               80432288 # total number of instructions executed
sim_num_refs               28767230 # total number of loads and stores executed
sim_elapsed_time                  3 # total simulation time in seconds
sim_inst_rate          26810762.6667 # simulation speed (in insts/sec)
il1.accesses               80432288 # total number of accesses
il1.hits                   80429660 # total number of hits
il1.misses                     2628 # total number of misses
il1.replacements               2372 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0000 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
il1.read_accesses          80432288 # total number of read accesses
il1.read_hits              80429660 # total number of read hits
il1.read_misses                2628 # total number of read misses
il1.read_miss_rate           0.0000 # read miss rate
il1.prefetch_accesses             0 # total number of prefetch accesses
il1.prefetch_hits                 0 # total number of prefetch hits
il1.prefetch_misses               0 # total number of prefetch misses
dl1.accesses               29063125 # total number of accesses
dl1.hits                   27853167 # total number of hits
dl1.misses                  1209958 # total number of misses
dl1.replacements            1209702 # total number of replacements
dl1.writebacks               592063 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0416 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0416 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0204 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.read_accesses          17381698 # total number of read accesses
dl1.read_hits              16513846 # total number of read hits
dl1.read_misses              867852 # total number of read misses
dl1.read_miss_rate           0.0499 # read miss rate
dl1.prefetch_accesses             0 # total number of prefetch accesses
dl1.prefetch_hits                 0 # total number of prefetch hits
dl1.prefetch_misses               0 # total number of prefetch misses
ul2.accesses                1804649 # total number of accesses
ul2.hits                    1598867 # total number of hits
ul2.misses                   205782 # total number of misses
ul2.replacements             201686 # total number of replacements
ul2.writebacks               184181 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.1140 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.1118 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.1021 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.read_accesses           1212586 # total number of read accesses
ul2.read_hits               1006950 # total number of read hits
ul2.read_misses              205636 # total number of read misses
ul2.read_miss_rate           0.1696 # read miss rate
ul2.prefetch_accesses             0 # total number of prefetch accesses
ul2.prefetch_hits                 0 # total number of prefetch hits
ul2.prefetch_misses               0 # total number of prefetch misses
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 103840 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size               44123012 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  206 # total number of pages allocated
mem.page_mem                   824k # total size of memory pages allocated
mem.ptab_misses                 206 # total first level page table misses
mem.ptab_accesses         380232234 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

